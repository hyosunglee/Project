import SpriteKit

class Coin: SKSpriteNode {
    init() {
        let texture = SKTexture(imageNamed: "coin")
        super.init(texture: texture, color: .clear, size: CGSize(width: 50, height: 50))
        self.name = "coin"

        // 물리 바디 설정 (충돌 감지용)
        self.physicsBody = SKPhysicsBody(circleOfRadius: size.width / 2)
        self.physicsBody?.categoryBitMask = 2
        self.physicsBody?.contactTestBitMask = 1 // 캐릭터와 충돌 감지
        self.physicsBody?.collisionBitMask = 0
        self.physicsBody?.affectedByGravity = false
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}

class GameScene: SKScene, SKPhysicsContactDelegate {
    var character: SKSpriteNode!
    var scoreLabel: SKLabelNode!
    var score = 0

    override func didMove(to view: SKView) {
        physicsWorld.contactDelegate = self
        backgroundColor = .blue

        // 캐릭터 설정
        character = SKSpriteNode(imageNamed: "walk1")
        character.position = CGPoint(x: size.width / 3, y: size.height / 3)
        character.size = CGSize(width: 100, height: 100)
        character.physicsBody = SKPhysicsBody(rectangleOf: character.size)
        character.physicsBody?.categoryBitMask = 1
        character.physicsBody?.contactTestBitMask = 2
        character.physicsBody?.collisionBitMask = 0
        character.physicsBody?.affectedByGravity = false
        addChild(character)

        // 점수 표시
        scoreLabel = SKLabelNode(fontNamed: "Arial-BoldMT")
        scoreLabel.fontSize = 36
        scoreLabel.fontColor = .white
        scoreLabel.position = CGPoint(x: size.width / 2, y: size.height - 60)
        scoreLabel.text = "Score: 0"
        addChild(scoreLabel)

        // 동전 생성 타이머 시작
        run(SKAction.repeatForever(SKAction.sequence([
            SKAction.run { self.spawnCoin() },
            SKAction.wait(forDuration: 2.0)
        ])))
    }

    func spawnCoin() {
        let coin = Coin()
        let xPos = CGFloat.random(in: 100...(size.width - 100))
        let yPos = CGFloat.random(in: 100...(size.height - 100))
        coin.position = CGPoint(x: xPos, y: yPos)
        addChild(coin)
    }

    func didBegin(_ contact: SKPhysicsContact) {
        guard let nodeA = contact.bodyA.node, let nodeB = contact.bodyB.node else { return }

        if nodeA.name == "coin" && nodeB == character {
            collectCoin(coin: nodeA)
        } else if nodeB.name == "coin" && nodeA == character {
            collectCoin(coin: nodeB)
        }
    }

    func collectCoin(coin: SKNode) {
        coin.removeFromParent()
        score += 1
        scoreLabel.text = "Score: \(score)"

        // 수집 시 +1 팝업
        let popup = SKLabelNode(text: "+1")
        popup.fontSize = 24
        popup.fontColor = .yellow
        popup.position = coin.position
        addChild(popup)

        let moveUp = SKAction.moveBy(x: 0, y: 30, duration: 0.5)
        let fadeOut = SKAction.fadeOut(withDuration: 0.5)
        let group = SKAction.group([moveUp, fadeOut])

        popup.run(group) { popup.removeFromParent() }
    }
}
